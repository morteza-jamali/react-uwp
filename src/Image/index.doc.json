{
  "exports": [
    {
      "name": "DataProps"
    },
    {
      "name": "ImageProps"
    },
    {
      "name": "ImageState"
    },
    {
      "name": "Image"
    },
    {
      "name": "default",
      "extends": [
        "Image"
      ]
    }
  ],
  "members": [
    {
      "name": "ReactLazyLoad",
      "type": "any",
      "initializerText": " require(\"react-lazyload\").default"
    },
    {
      "name": "ReactLazyLoad",
      "type": "any"
    },
    {
      "name": "DataProps",
      "members": [
        {
          "name": "useLazyLoad",
          "documentation": "Toggle LazyLoad mode open, powerful base on [react-lazyload](https://github.com/jasonslyvia/react-lazyload).",
          "isRequired": false,
          "type": "boolean"
        },
        {
          "name": "useDivContainer",
          "documentation": "Use Div backgroundImage.",
          "isRequired": false,
          "type": "boolean"
        },
        {
          "name": "once",
          "documentation": "Once the lazy loaded component is loaded, do not detect scroll/resize event anymore. Useful for images or simple components.",
          "isRequired": false,
          "type": "boolean"
        },
        {
          "name": "offset",
          "documentation": "Say if you want to preload a component even if it's 100px below the viewport (user have to scroll 100px more to see this component), you can set `offset` props to `100`. On the other hand, if you want to delay loading a component even if it's top edge has already appeared at viewport, set `offset` to negative number.",
          "isRequired": false,
          "type": "number | number[]"
        },
        {
          "name": "scroll",
          "documentation": "Listen and react to scroll event.",
          "isRequired": false,
          "type": "boolean"
        },
        {
          "name": "resize",
          "documentation": "Respond to `resize` event, set it to `true` if you do need LazyLoad listen resize event.",
          "isRequired": false,
          "type": "boolean"
        },
        {
          "name": "overflow",
          "documentation": "If lazy loading components inside a overflow container, set this to `true`. Also make sure a `position` property other than `static` has been set to your overflow container.",
          "isRequired": false,
          "type": "boolean"
        },
        {
          "name": "debounce",
          "documentation": "By default, LazyLoad will have all event handlers debounced in 300ms for better performance. You can disable this by setting `debounce` to `false`, or change debounce time by setting a number value.",
          "isRequired": false,
          "type": "number | boolean"
        },
        {
          "name": "throttle",
          "documentation": "If you prefer `throttle` rather than `debounce`, you can set this props to `true` or provide a specific number.",
          "isRequired": false,
          "type": "number | boolean"
        },
        {
          "name": "placeholder",
          "isRequired": false,
          "type": "ReactNode"
        },
        {
          "name": "src",
          "isRequired": false,
          "type": "string"
        },
        {
          "name": "height",
          "isRequired": false,
          "type": "ReactText"
        }
      ]
    },
    {
      "name": "ImageProps",
      "extends": [
        "DataProps",
        "HTMLAttributes"
      ]
    },
    {
      "name": "ImageState",
      "members": [
        {
          "name": "showEmptyImage",
          "isRequired": false,
          "type": "boolean"
        }
      ]
    },
    {
      "name": "Placeholder",
      "exports": [
        {
          "name": "prototype",
          "type": "prototype"
        },
        {
          "name": "contextTypes",
          "initializerText": " { theme: PropTypes.object }",
          "type": "{ theme: Requireable<any>; }"
        }
      ],
      "members": [
        {
          "name": "context",
          "type": "{ theme: any; }"
        },
        {
          "name": "render",
          "type": "() => Element"
        }
      ],
      "extends": [
        "Component"
      ]
    },
    {
      "name": "Image",
      "exports": [
        {
          "name": "prototype",
          "type": "prototype"
        },
        {
          "name": "defaultProps",
          "initializerText": " {\n    useLazyLoad: false,\n    useDivContainer: false,\n    once: true,\n    offset: 0,\n    scroll: true,\n    overflow: false,\n    throttle: 60\n  }",
          "type": "ImageProps"
        },
        {
          "name": "contextTypes",
          "initializerText": " { theme: PropTypes.object }",
          "type": "{ theme: Requireable<any>; }"
        }
      ],
      "members": [
        {
          "name": "context",
          "type": "{ theme: any; }"
        },
        {
          "name": "state",
          "initializerText": " {\n    showEmptyImage: false\n  }",
          "type": "ImageState"
        },
        {
          "name": "errorHandler",
          "initializerText": " (e: any) => this.setState({ showEmptyImage: true })",
          "type": "(e: any) => void"
        },
        {
          "name": "render",
          "type": "() => any"
        }
      ],
      "extends": [
        "Component"
      ]
    }
  ],
  "type": "typeof \"D:/react-uwp/src/Image/index\""
}