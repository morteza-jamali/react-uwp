{
  "exports": [
    {
      "name": "DataProps"
    },
    {
      "name": "TimePickerProps"
    },
    {
      "name": "TimePickerState"
    },
    {
      "name": "TimePicker"
    },
    {
      "name": "default",
      "extends": [
        "TimePicker"
      ]
    }
  ],
  "members": [
    {
      "name": "DataProps",
      "members": [
        {
          "name": "defaultHour",
          "documentation": "Set default `hour`.",
          "isRequired": false,
          "type": "number"
        },
        {
          "name": "defaultMinute",
          "documentation": "Set default `minute`.",
          "isRequired": false,
          "type": "number"
        },
        {
          "name": "defaultShowPicker",
          "documentation": "Set default show `Picker` modal.",
          "isRequired": false,
          "type": "boolean"
        },
        {
          "name": "onChangeTime",
          "documentation": "`onChangeTime` callback.",
          "isRequired": false,
          "type": "(hours?: number, minutes?: number) => void"
        },
        {
          "name": "inputItemHeight",
          "documentation": "Set `Input` element height.",
          "isRequired": false,
          "type": "number"
        },
        {
          "name": "pickerItemHeight",
          "documentation": "Set `Picker` element height.",
          "isRequired": false,
          "type": "number"
        },
        {
          "name": "background",
          "documentation": "Set Custom background.",
          "isRequired": false,
          "type": "string"
        }
      ]
    },
    {
      "name": "TimePickerProps",
      "extends": [
        "DataProps",
        "HTMLAttributes"
      ]
    },
    {
      "name": "TimePickerState",
      "members": [
        {
          "name": "showPicker",
          "isRequired": false,
          "type": "boolean"
        },
        {
          "name": "currHour",
          "isRequired": false,
          "type": "number"
        },
        {
          "name": "currMinute",
          "isRequired": false,
          "type": "number"
        }
      ]
    },
    {
      "name": "emptyFunc",
      "type": "() => void",
      "initializerText": " () => {}"
    },
    {
      "name": "emptyFunc",
      "type": "() => void"
    },
    {
      "name": "TimePicker",
      "exports": [
        {
          "name": "prototype",
          "type": "prototype"
        },
        {
          "name": "defaultProps",
          "initializerText": " {\n    defaultShowPicker: false,\n    inputItemHeight: 28,\n    pickerItemHeight: 44,\n    defaultHour: 12,\n    defaultMinute: 30,\n    onChangeTime: emptyFunc\n  }",
          "type": "TimePickerProps"
        },
        {
          "name": "contextTypes",
          "initializerText": " { theme: PropTypes.object }",
          "type": "{ theme: Requireable<any>; }"
        }
      ],
      "members": [
        {
          "name": "state",
          "initializerText": " {\n    showPicker: this.props.defaultShowPicker,\n    currHour: this.props.defaultHour,\n    currMinute: this.props.defaultMinute\n  }",
          "type": "TimePickerState"
        },
        {
          "name": "addBlurEvent",
          "initializerText": " new AddBlurEvent()",
          "type": "AddBlurEvent"
        },
        {
          "name": "rootElm",
          "initializerText": " null",
          "type": "HTMLDivElement"
        },
        {
          "name": "context",
          "type": "{ theme: any; }"
        },
        {
          "name": "prevState",
          "initializerText": " {\n    currHour: this.props.defaultHour,\n    currMinute: this.props.defaultMinute\n  }",
          "type": "{ currHour: number; currMinute: number; }"
        },
        {
          "name": "hourListView",
          "type": "any"
        },
        {
          "name": "minuteListView",
          "type": "any"
        },
        {
          "name": "timeTypeListView",
          "type": "any"
        },
        {
          "name": "hourIndex",
          "type": "number"
        },
        {
          "name": "minuteIndex",
          "type": "number"
        },
        {
          "name": "timeTypeIndex",
          "type": "number"
        },
        {
          "name": "componentWillReceiveProps",
          "type": "(nextProps: TimePickerProps) => void"
        },
        {
          "name": "addBlurEventMethod",
          "initializerText": " () => {\n    this.addBlurEvent.setConfig({\n      addListener: this.state.showPicker,\n      clickExcludeElm: this.rootElm,\n      blurCallback: () => {\n        this.setState({\n          showPicker: false\n        });\n      },\n      blurKeyCodes: [codes.esc]\n    });\n  }",
          "type": "() => void"
        },
        {
          "name": "componentDidMount",
          "type": "() => void"
        },
        {
          "name": "componentDidUpdate",
          "type": "() => void"
        },
        {
          "name": "componentWillUnmount",
          "type": "() => void"
        },
        {
          "name": "toggleShowPicker",
          "initializerText": " (showPicker?: any) => {\n    if (typeof showPicker === \"boolean\") {\n      if (showPicker !== this.state.showPicker) {\n        this.setState({ showPicker });\n      }\n    } else {\n      this.setState((prevState, prevProps) => {\n        const showPicker = !prevState.showPicker;\n        return { showPicker };\n      });\n    }\n  }",
          "type": "(showPicker?: any) => void"
        },
        {
          "name": "render",
          "type": "() => Element"
        }
      ],
      "extends": [
        "Component"
      ]
    },
    {
      "name": "getStyles",
      "type": "(TimePicker: TimePicker) => { root?: CSSProperties; button?: CSSProperties; pickerModal?: CSSProp..."
    }
  ],
  "type": "typeof \"D:/react-uwp/src/TimePicker/index\""
}